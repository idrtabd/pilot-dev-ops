version: '3.8'

services:
  # PostgreSQL Database (Development)
  postgres:
    image: postgres:16-alpine
    container_name: pilot-postgres-dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: devpassword
      POSTGRES_DB: pilot_db_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./pilot-database/init.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pilot-network-dev

  # API Backend (Development with hot reload)
  api:
    build:
      context: ./pilot-api
      dockerfile: Dockerfile.dev
    container_name: pilot-api-dev
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:devpassword@postgres:5432/pilot_db_dev
      CORS_ORIGIN: http://localhost:5173
      LOG_LEVEL: debug
    ports:
      - "3000:3000"
    volumes:
      - ./pilot-api/src:/app/src
      - ./pilot-api/package.json:/app/package.json
      - ./pilot-api/tsconfig.json:/app/tsconfig.json
      - ./pilot-api/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    command: yarn dev
    networks:
      - pilot-network-dev

  # React Frontend (Development with hot reload)
  frontend:
    build:
      context: ./pilot-react
      dockerfile: Dockerfile.dev
    container_name: pilot-frontend-dev
    environment:
      - VITE_API_URL=http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./pilot-react/src:/app/src
      - ./pilot-react/public:/app/public
      - ./pilot-react/index.html:/app/index.html
      - ./pilot-react/vite.config.ts:/app/vite.config.ts
      - ./pilot-react/package.json:/app/package.json
    depends_on:
      - api
    command: yarn dev --host 0.0.0.0
    networks:
      - pilot-network-dev

volumes:
  postgres_dev_data:

networks:
  pilot-network-dev:
    driver: bridge